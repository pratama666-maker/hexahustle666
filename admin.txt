<!DOCTYPE html>
<html lang="id">
<head>
<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Admin | Hexahustle</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-black text-white p-6">

  <h1 class="text-3xl font-bold text-center mb-6">ðŸ‘‘ Halaman Admin</h1>

  <!-- Menambah/Edit Produk -->
  <section>
    <h2 class="text-2xl font-bold mb-4">Kelola Produk</h2>
    <form id="formProduk" class="mb-6">
      <input type="file" id="gambarProduk" class="p-2 bg-gray-800 text-white rounded w-full mb-4" accept="image/*" required />
      <input type="text" id="namaProduk" class="p-2 bg-gray-800 text-white rounded w-full mb-4" placeholder="Nama Produk" required />
      <input type="number" id="hargaProduk" class="p-2 bg-gray-800 text-white rounded w-full mb-4" placeholder="Harga Produk" required />
      <textarea id="deskripsiProduk" class="p-2 bg-gray-800 text-white rounded w-full mb-4" placeholder="Deskripsi Produk" required></textarea>
      <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">Tambah Produk</button>
    </form>
  </section>

  <!-- Daftar Produk -->
  <section>
    <h2 class="text-2xl font-bold mb-4">Daftar Produk</h2>
    <table class="min-w-full bg-gray-800 rounded mb-4">
      <thead>
        <tr>
          <th class="p-4 text-left">Gambar</th>
          <th class="p-4 text-left">Nama Produk</th>
          <th class="p-4 text-left">Harga</th>
          <th class="p-4 text-left">Deskripsi</th>
          <th class="p-4 text-left">Aksi</th>
        </tr>
      </thead>
      <tbody id="produkList">
        <!-- Daftar produk akan ditampilkan di sini -->
      </tbody>
    </table>
  </section>

  <!-- Menandai Status Pesanan -->
  <section>
    <h2 class="text-2xl font-bold mb-4">Pesanan Masuk</h2>
    <table class="min-w-full bg-gray-800 rounded mb-4">
      <thead>
        <tr>
          <th class="p-4 text-left">Nama Pembeli</th>
          <th class="p-4 text-left">Produk</th>
          <th class="p-4 text-left">Status</th>
          <th class="p-4 text-left">Aksi</th>
        </tr>
      </thead>
      <tbody id="pesananList">
        <!-- Daftar pesanan akan ditampilkan di sini -->
      </tbody>
    </table>
  </section>

  <!-- Balas Chat -->
  <section class="mt-6">
    <h2 class="text-2xl font-bold mb-4">Chat Pengguna</h2>
    <div id="chatMessages" class="bg-gray-700 p-4 rounded mb-4 space-y-4">
      <!-- Chat akan ditampilkan di sini -->
    </div>
    <textarea id="adminReply" class="w-full p-2 bg-gray-800 text-white rounded" placeholder="Balas chat di sini..." rows="4"></textarea>
    <button onclick="balasChat()" class="bg-blue-600 text-white px-4 py-2 rounded mt-4">Kirim Balasan</button>
  </section>

  <script>
    let produkList = JSON.parse(localStorage.getItem('produkHexahustle')) || [];
    let pesananList = JSON.parse(localStorage.getItem('pesananHexahustle')) || [];
    let chatMessages = JSON.parse(localStorage.getItem('chatMessages')) || [];

    // Menampilkan Produk
    function tampilkanProduk() {
      const produkTable = document.getElementById('produkList');
      produkTable.innerHTML = '';
      
      produkList.forEach((produk, index) => {
        produkTable.innerHTML += `
          <tr>
            <td class="p-4"><img src="${produk.gambar}" alt="Gambar Produk" class="w-16 h-16 object-cover rounded"/></td>
            <td class="p-4">${produk.namaProduk}</td>
            <td class="p-4">${produk.hargaProduk}</td>
            <td class="p-4">${produk.deskripsiProduk}</td>
            <td class="p-4">
              <button onclick="editProduk(${index})" class="bg-yellow-600 text-white p-2 rounded">Edit</button>
              <button onclick="hapusProduk(${index})" class="bg-red-600 text-white p-2 rounded ml-2">Hapus</button>
            </td>
          </tr>
        `;
      });
    }

    // Menambah Produk Baru
    document.getElementById('formProduk').addEventListener('submit', function(event) {
      event.preventDefault();

      const gambarProduk = document.getElementById('gambarProduk').files[0];
      const reader = new FileReader();
      reader.onloadend = function() {
        const produkBaru = {
          gambar: reader.result,
          namaProduk: document.getElementById('namaProduk').value,
          hargaProduk: document.getElementById('hargaProduk').value,
          deskripsiProduk: document.getElementById('deskripsiProduk').value,
        };

        produkList.push(produkBaru);
        localStorage.setItem('produkHexahustle', JSON.stringify(produkList));
        alert("Produk berhasil ditambahkan!");
        tampilkanProduk();

        // Clear form
        document.getElementById('formProduk').reset();
      };
      if (gambarProduk) {
        reader.readAsDataURL(gambarProduk);
      }
    });

    // Mengedit Produk
    function editProduk(index) {
      const produk = produkList[index];
      document.getElementById('namaProduk').value = produk.namaProduk;
      document.getElementById('hargaProduk').value = produk.hargaProduk;
      document.getElementById('deskripsiProduk').value = produk.deskripsiProduk;
      document.getElementById('formProduk').onsubmit = function(event) {
        event.preventDefault();

        const gambarProduk = document.getElementById('gambarProduk').files[0];
        const reader = new FileReader();
        reader.onloadend = function() {
          produkList[index] = {
            gambar: gambarProduk ? reader.result : produk.gambar,
            namaProduk: document.getElementById('namaProduk').value,
            hargaProduk: document.getElementById('hargaProduk').value,
            deskripsiProduk: document.getElementById('deskripsiProduk').value,
          };

          localStorage.setItem('produkHexahustle', JSON.stringify(produkList));
          alert("Produk berhasil diupdate!");
          tampilkanProduk();
          document.getElementById('formProduk').reset();
        };
        if (gambarProduk) {
          reader.readAsDataURL(gambarProduk);
        }
      };
    }

    // Menghapus Produk
    function hapusProduk(index) {
      produkList.splice(index, 1);
      localStorage.setItem('produkHexahustle', JSON.stringify(produkList));
      tampilkanProduk();
    }

    // Menandai Status Pesanan
    function ubahStatus(index, status) {
      pesananList[index].status = status;
      localStorage.setItem('pesananHexahustle', JSON.stringify(pesananList));
      tampilkanPesanan();
      
      // Kirim notifikasi email (simulasi)
      kirimEmail(pesananList[index].namaPembeli, status);
    }

    // Simulasi mengirim email
    function kirimEmail(namaPembeli, status) {
      alert(`Notifikasi Email: Pesanan untuk ${namaPembeli} telah diperbarui ke status ${status}`);
    }

    // Validasi Pesanan
    function validasiPesanan(index) {
      pesananList[index].status = "Divalidasi";
      localStorage.setItem('pesananHexahustle', JSON.stringify(pesananList));
      alert("Pesanan telah divalidasi.");
      tampilkanPesanan();
    }

    // Menampilkan Pesanan
    function tampilkanPesanan() {
      const pesananTable = document.getElementById('pesananList');
      pesananTable.innerHTML = '';
      
      pesananList.forEach((pesanan, index) => {
        pesananTable.innerHTML += `
          <tr>
            <td class="p-4">${pesanan.namaPembeli}</td>
            <td class="p-4">${pesanan.produk}</td>
            <td class="p-4">${pesanan.status}</td>
            <td class="p-4">
              <select onchange="ubahStatus(${index}, this.value)" class="bg-gray-700 text-white p-2 rounded">
                <option value="Sedang Diproses" ${pesanan.status === "Sedang Diproses" ? "selected" : ""}>Sedang Diproses</option>
                <option value="Dikirim" ${pesanan.status === "Dikirim" ? "selected" : ""}>Dikirim</option>
                <option value="Selesai" ${pesanan.status === "Selesai" ? "selected" : ""}>Selesai</option>
              </select>
              <button onclick="validasiPesanan(${index})" class="bg-green-600 text-white p-2 rounded ml-4">Validasi</button>
            </td>
          </tr>
        `;
      });
    }

    // Menampilkan Chat
    function tampilkanChat() {
      const chatDiv = document.getElementById('chatMessages');
      chatDiv.innerHTML = '';
      
      chatMessages.forEach((chat) => {
        chatDiv.innerHTML += `
          <div class="bg-gray-600 p-3 rounded mb-2">
            <strong>${chat.pengguna}:</strong> ${chat.pesan}
          </div>
        `;
      });
    }

    // Balas Chat
    function balasChat() {
      const replyMessage = document.getElementById('adminReply').value;
      if (replyMessage.trim() !== "") {
        chatMessages.push({ pengguna: "Admin", pesan: replyMessage });
        localStorage.setItem('chatMessages', JSON.stringify(chatMessages));
        tampilkanChat();
        
        // Clear input
        document.getElementById('adminReply').value = '';
      }
    }

    // Menampilkan data produk, pesanan, dan chat
    tampilkanProduk();
    tampilkanPesanan();
    tampilkanChat();
  </script>

</body>
</html>

